#!/bin/bash

# Readiness check for proceeding to next phases

echo "=== READINESS CHECK ==="
echo "Generated: $(date)"
echo

# Source .env for Neo4j credentials
source .env

# Check Neo4j node count
echo "üîç Checking Neo4j data..."
TOTAL_NODES=$(docker exec azure-tenant-grapher-neo4j cypher-shell -u neo4j -p "$NEO4J_PASSWORD" "MATCH (n) RETURN count(n) as count" 2>/dev/null | grep -E '^[0-9]+$' | head -1 || echo "0")
RESOURCE_NODES=$(docker exec azure-tenant-grapher-neo4j cypher-shell -u neo4j -p "$NEO4J_PASSWORD" "MATCH (n:AzureResource) RETURN count(n) as count" 2>/dev/null | grep -E '^[0-9]+$' | head -1 || echo "0")

echo "  Total nodes: $TOTAL_NODES"
echo "  Azure resources: $RESOURCE_NODES"
echo

# Check if scans are still running
echo "üîÑ Checking scan processes..."
SCAN_PROCS=$(ps aux | grep "[u]v run atg scan" | wc -l)
echo "  Active scan processes: $SCAN_PROCS"
echo

# Check log file sizes
echo "üìä Checking scan logs..."
SOURCE_LINES=$(wc -l < demos/iteration_autonomous_001/logs/source_scan_v2.log 2>/dev/null || echo "0")
TARGET_LINES=$(wc -l < demos/iteration_autonomous_001/logs/target_scan_baseline.log 2>/dev/null || echo "0")
echo "  Source log lines: $SOURCE_LINES"
echo "  Target log lines: $TARGET_LINES"
echo

# Check for spec file (generated by --generate-spec flag)
echo "üìÑ Checking for generated spec..."
SPEC_FILES=$(find . -name "*spec*.json" -o -name "*spec*.yaml" 2>/dev/null | wc -l)
echo "  Spec files found: $SPEC_FILES"
echo

# Readiness determination
echo "‚úÖ READINESS ASSESSMENT:"
echo

READY="false"

if [ "$RESOURCE_NODES" -ge 300 ]; then
    echo "  ‚úÖ Sufficient Neo4j data ($RESOURCE_NODES resources)"
    READY="true"
elif [ "$RESOURCE_NODES" -ge 100 ]; then
    echo "  ‚ö†Ô∏è  Moderate Neo4j data ($RESOURCE_NODES resources) - could proceed with reduced fidelity"
    if [ "$SCAN_PROCS" -eq 0 ]; then
        echo "  ‚úÖ Scans complete, using available data"
        READY="true"
    fi
else
    echo "  ‚ùå Insufficient data ($RESOURCE_NODES resources) - wait for scans to complete"
fi

if [ "$SCAN_PROCS" -eq 0 ]; then
    echo "  ‚úÖ All scans completed"
else
    echo "  ‚è≥ $SCAN_PROCS scan(s) still running"
fi

if [ "$SPEC_FILES" -gt 0 ]; then
    echo "  ‚úÖ Spec file(s) generated"
else
    echo "  ‚è≥ No spec files yet (will be generated when source scan completes)"
fi

echo
if [ "$READY" = "true" ]; then
    echo "üéâ READY TO PROCEED to next phases!"
    exit 0
else
    echo "‚è≥ NOT READY - continue monitoring"
    exit 1
fi
