# Azure Tenant Grapher Security Configuration

# WebSocket Authentication
# Generate a secure key for credential encryption (production)
# CREDENTIAL_MASTER_KEY=<hex_encoded_32_byte_key>

# ============================================================================
# Neo4j Database Credentials
# ============================================================================
# SECURITY WARNING: Never commit actual credentials to version control!
# These environment variables must be set for all Neo4j database connections.
#
# All scripts and modules use these environment variables to connect to Neo4j.
# Hardcoded credentials have been removed for security.

# NEO4J_PASSWORD (REQUIRED)
# The password for the Neo4j database
# This must be set - no default value is provided
NEO4J_PASSWORD=your-secure-password-here

# NEO4J_PORT (REQUIRED)
# The port number where Neo4j is listening for bolt connections
# Default Neo4j bolt port is 7687
# This is used to construct the connection URI if NEO4J_URI is not set
NEO4J_PORT=7687

# NEO4J_URI (OPTIONAL)
# Complete Neo4j connection URI including protocol, host, and port
# If not set, will be constructed as: bolt://localhost:${NEO4J_PORT}
# Examples:
#   bolt://localhost:7687
#   bolt://neo4j.example.com:7687
#   neo4j://localhost:7687
NEO4J_URI=bolt://localhost:7687

# NEO4J_USERNAME (OPTIONAL)
# The username for Neo4j authentication
# Defaults to 'neo4j' if not set
NEO4J_USERNAME=neo4j

# Azure Credentials (for service principal authentication)
AZURE_TENANT_ID=your-tenant-id
AZURE_CLIENT_ID=your-client-id
AZURE_CLIENT_SECRET=your-client-secret

# Cross-Tenant Replication (optional - for multi-tenant IaC generation)
# Configure separate service principals for source and target tenants
# This enables conflict detection to use the correct credentials per subscription
AZURE_TENANT_1_ID=source-tenant-id
AZURE_TENANT_1_CLIENT_ID=source-sp-client-id
AZURE_TENANT_1_CLIENT_SECRET=source-sp-secret
AZURE_TENANT_1_SUBSCRIPTION_ID=source-subscription-id
AZURE_TENANT_1_NAME=Primary

AZURE_TENANT_2_ID=target-tenant-id
AZURE_TENANT_2_CLIENT_ID=target-sp-client-id
AZURE_TENANT_2_CLIENT_SECRET=target-sp-secret
AZURE_TENANT_2_SUBSCRIPTION_ID=target-subscription-id
AZURE_TENANT_2_NAME=Secondary

# Automatic Service Principal Switching (Issue #387)
# Enable dual-tenant mode for automatic credential switching based on operation context
# When enabled, discovery operations use source credentials, deployment uses target credentials
AZTG_DUAL_TENANT_MODE=false  # Set to 'true' to enable automatic switching

# Source Tenant Configuration (for discovery/read operations - Reader role)
AZURE_SOURCE_TENANT_ID=source-tenant-id
AZURE_SOURCE_TENANT_CLIENT_ID=source-sp-client-id
AZURE_SOURCE_TENANT_CLIENT_SECRET=source-sp-secret
AZURE_SOURCE_TENANT_SUBSCRIPTION_ID=source-subscription-id

# Target Tenant Configuration (for deployment/write operations - Contributor role)
AZURE_TARGET_TENANT_ID=target-tenant-id
AZURE_TARGET_TENANT_CLIENT_ID=target-sp-client-id
AZURE_TARGET_TENANT_CLIENT_SECRET=target-sp-secret
AZURE_TARGET_TENANT_SUBSCRIPTION_ID=target-subscription-id

# Control automatic credential switching (default: true when dual-tenant mode enabled)
AZTG_AUTO_SWITCH=true

# Azure OpenAI Configuration
AZURE_OPENAI_ENDPOINT=https://your-endpoint.openai.azure.com/
AZURE_OPENAI_KEY=your-api-key
AZURE_OPENAI_API_VERSION=2024-02-01
AZURE_OPENAI_MODEL_CHAT=gpt-4
AZURE_OPENAI_MODEL_REASONING=gpt-4

# Security Settings
LOG_LEVEL=INFO
RESOURCE_LIMIT=1000

# Processing Configuration
# Maximum concurrent API calls for fetching resource details during scanning
# Default: 20 (recommended - Azure API rate limits are the bottleneck, not thread count)
# Increasing this value beyond 20 provides minimal improvement due to Azure throttling
MAX_BUILD_THREADS=20

# Backend Server
BACKEND_PORT=3001

# Python Path (optional)
# PYTHON_PATH=python3

# UV Path (optional)
# UV_PATH=uv
